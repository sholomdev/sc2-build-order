import { type NextPage } from "next";
import Head from "next/head";

import { api } from "../utils/api";
import { useState } from "react";
import { useRouter } from "next/router";

const Submit: NextPage = () => {
  const createBuildMutation = api.builds.createBuild.useMutation();
  const [build, setBuild] = useState("");
  const [matchUp, setMatchUp] = useState("zvt");

  const router = useRouter();

  async function handleSubmitBuildOrder(e: React.FormEvent) {
    e.preventDefault();
    await createBuildMutation.mutateAsync({
      matchUp,
      build,
    });
    void router.push("/builds");
  }
  return (
    <>
      <Head>
        <title>Submit a Build</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center gap-8 bg-gradient-to-b from-[#2e026d] to-[#15162c] text-white">
        <h1>Submit a Build Order</h1>
        <form
          className="flex flex-col gap-4"
          onSubmit={(e) => void handleSubmitBuildOrder(e)}
        >
          <label htmlFor="match-up-select">Match Up</label>
          <select
            value={matchUp}
            id="match-up-select"
            className="text-black"
            required
            onChange={(e) => {
              setMatchUp(e.target.value);
            }}
          >
            <option value="zvt">ZvT</option>
            <option value="zvp">ZvP</option>
            <option value="zvz">ZvZ</option>
            <option value="pvt">PvT</option>
            <option value="pvp">PvP</option>
            <option value="pvz">PvZ</option>
            <option value="tvt">TvT</option>
            <option value="tvp">TvP</option>
            <option value="tvz">TvZ</option>
          </select>

          <textarea
            required
            className="p-2 text-black"
            value={build}
            cols={30}
            rows={5}
            onChange={(e) => setBuild(e.target.value)}
          ></textarea>
          <button className="bg-white p-2 text-black">submit</button>
        </form>
      </main>
    </>
  );
};

export default Submit;

// const AuthShowcase: React.FC = () => {
//   const { data: sessionData } = useSession();

//   const { data: secretMessage } = api.example.getSecretMessage.useQuery(
//     undefined, // no input
//     { enabled: sessionData?.user !== undefined },
//   );

//   return (
//     <div className="flex flex-col items-center justify-center gap-4">
//       <p className="text-center text-2xl text-white">
//         {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
//         {secretMessage && <span> - {secretMessage}</span>}
//       </p>
//       <button
//         className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
//         onClick={sessionData ? () => void signOut() : () => void signIn()}
//       >
//         {sessionData ? "Sign out" : "Sign in"}
//       </button>
//     </div>
//   );
// };
